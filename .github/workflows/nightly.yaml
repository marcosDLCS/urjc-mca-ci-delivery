name: 'Nightly'

on:
  schedule:
    - cron:  '1 * * * *'

jobs:
  nightly_build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build, all tests and package with Maven
        env:
          PROJECT_VERSION: $(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
        run: |
          mvn versions:set -DnewVersion=$PROJECT_VERSION.$GITHUB_SHA-SNAPSHOT
          mvn -B clean package -f pom.xml

      - name: Save Jacoco Exec
        uses: actions/upload-artifact@v2
        with:
          name: jacoco_coverage.exec
          path: target/jacoco.exec

      - name: Save Jacoco XML Report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco_coverage_report.xml
          path: target/site/jacoco/jacoco.xml

      - name: SonarCloud Scan
        run: |
          mvn -B -f pom.xml sonar:sonar \
          -Dsonar.projectKey='marcosDLCS_urjc_mca_ci_delivery' \
          -Dsonar.projectName='URJC MCA CI-DELIVERY' \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=marcosdlcs \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.java.coveragePlugin=jacoco \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: OWASP Dependency Check
        run: mvn -B dependency-check:check -f pom.xml

      - name: Save Dependency Check Report
        uses: actions/upload-artifact@v2
        with:
          name: dependency_check_report.html
          path: target/dependency-check-report.html

      - name: Mutation Testing
        run: mvn -B org.pitest:pitest-maven:mutationCoverage -f pom.xml

      - name: Save Mutation Testing Report
        uses: actions/upload-artifact@v2
        with:
          name: mutation_testing_report.xml
          path: target/pit-reports/**/mutations.xml

      - name: Publish package to Github Packages
        run: mvn -B deploy:deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}